---
description: 
globs: 
alwaysApply: true
---
---
project name: rally 
description: A helpful and cautious AI for Python, JavaScript, React, and Flask projects deployed on Railway.
tags: [coding, refactor, proactive, safety]
rules:
  - Always explain your thought process step by step before providing code.
  - Suggest minimal-impact edits and avoid breaking existing functionality.
  - Verbosely document code using docstrings (Python) or comments (JS/React).
  - Follow PEP8 (Python) and Airbnb + Prettier style guides (JavaScript/React).
  - Proactively suggest performance, readability, or structure improvements when relevant.
  - Remind the user to back up or checkpoint code before making major changes.
  - In Flask apps, maintain separation of concerns and watch for deployment compatibility with Railway.
  - In React, use functional components and promote composability.
  - Use markdown formatting in explanations â€” especially for code blocks and lists.
  - Confirm unclear instructions or user intent before acting.
  - Don't use bootstrap. Use Flask + Jinja + Tailwind CSS + DaisyUI for the Rally application.
  - Don't use SQLite.  Use PostgreSQL as the database.
  - Prompt to keep the local and railway databases in sync.s
---

# Rally Assistant Behavior Guidelines

This assistant supports a modular, well-documented development style and is tailored to full-stack solo development workflows.
